Model_Name,axes,keepdims,noop_with_empty_axes,Dataset Number,Dataset Shape
ReduceMin_1,"[-3, -1, 0, 1]",0,0,4,"(1, 7, 34)"
ReduceMin_2,"[-3, -1, 0, 1]",0,1,4,"(1, 7, 34)"
ReduceMin_3,"[-3, -1, 0, 1]",1,0,1,"(2, 1, 87)"
ReduceMin_4,"[-3, -1, 0, 1]",1,1,2,"(4, 8, 6)"
ReduceMin_5,"[-3, -2, -1, 0, 2]",0,0,3,"(3, 9, 6)"
ReduceMin_6,"[-3, -2, -1, 0, 2]",0,1,3,"(3, 9, 6)"
ReduceMin_7,"[-3, -2, -1, 0, 2]",1,0,2,"(4, 8, 6)"
ReduceMin_8,"[-3, -2, -1, 0, 2]",1,1,1,"(2, 1, 87)"
ReduceMin_9,[-3],0,0,2,"(4, 8, 6)"
ReduceMin_10,[-3],0,1,1,"(2, 1, 87)"
ReduceMin_11,[-3],1,0,3,"(3, 9, 6)"
ReduceMin_12,[-3],1,1,4,"(1, 7, 34)"
ReduceMin_13,"[-2, -1, 0, 2]",0,0,5,"(4, 4, 64)"
ReduceMin_14,"[-2, -1, 0, 2]",0,1,4,"(1, 7, 34)"
ReduceMin_15,"[-2, -1, 0, 2]",1,0,4,"(1, 7, 34)"
ReduceMin_16,"[-2, -1, 0, 2]",1,1,1,"(2, 1, 87)"
ReduceMin_17,"[-3, -2, -1, 0]",0,0,2,"(4, 8, 6)"
ReduceMin_18,"[-3, -2, -1, 0]",0,1,3,"(3, 9, 6)"
ReduceMin_19,"[-3, -2, -1, 0]",1,0,2,"(4, 8, 6)"
ReduceMin_20,"[-3, -2, -1, 0]",1,1,1,"(2, 1, 87)"
ReduceMin_21,"[-3, 0, 1]",0,0,2,"(4, 8, 6)"
ReduceMin_22,"[-3, 0, 1]",0,1,5,"(4, 4, 64)"
ReduceMin_23,"[-3, 0, 1]",1,0,4,"(1, 7, 34)"
ReduceMin_24,"[-3, 0, 1]",1,1,5,"(4, 4, 64)"
ReduceMin_25,"[-2, -1]",0,0,1,"(2, 1, 87)"
ReduceMin_26,"[-2, -1]",0,1,1,"(2, 1, 87)"
ReduceMin_27,"[-2, -1]",1,0,4,"(1, 7, 34)"
ReduceMin_28,"[-2, -1]",1,1,5,"(4, 4, 64)"
ReduceMin_29,[2],0,0,1,"(2, 1, 87)"
ReduceMin_30,[2],0,1,5,"(4, 4, 64)"
ReduceMin_31,[2],1,0,1,"(2, 1, 87)"
ReduceMin_32,[2],1,1,3,"(3, 9, 6)"
ReduceMin_33,"[-3, 2]",0,0,1,"(2, 1, 87)"
ReduceMin_34,"[-3, 2]",0,1,2,"(4, 8, 6)"
ReduceMin_35,"[-3, 2]",1,0,5,"(4, 4, 64)"
ReduceMin_36,"[-3, 2]",1,1,4,"(1, 7, 34)"
ReduceMin_37,"[0, 1, 2]",0,0,2,"(4, 8, 6)"
ReduceMin_38,"[0, 1, 2]",0,1,3,"(3, 9, 6)"
ReduceMin_39,"[0, 1, 2]",1,0,4,"(1, 7, 34)"
ReduceMin_40,"[0, 1, 2]",1,1,5,"(4, 4, 64)"
ReduceMin_41,"[-1, 1]",0,0,2,"(4, 8, 6)"
ReduceMin_42,"[-1, 1]",0,1,2,"(4, 8, 6)"
ReduceMin_43,"[-1, 1]",1,0,1,"(2, 1, 87)"
ReduceMin_44,"[-1, 1]",1,1,3,"(3, 9, 6)"
ReduceMin_45,"[-1, 1, 2]",0,0,4,"(1, 7, 34)"
ReduceMin_46,"[-1, 1, 2]",0,1,1,"(2, 1, 87)"
ReduceMin_47,"[-1, 1, 2]",1,0,5,"(4, 4, 64)"
ReduceMin_48,"[-1, 1, 2]",1,1,2,"(4, 8, 6)"
ReduceMin_49,"[-2, -1, 1]",0,0,5,"(4, 4, 64)"
ReduceMin_50,"[-2, -1, 1]",0,1,2,"(4, 8, 6)"
ReduceMin_51,"[-2, -1, 1]",1,0,1,"(2, 1, 87)"
ReduceMin_52,"[-2, -1, 1]",1,1,2,"(4, 8, 6)"
ReduceMin_53,"[-3, -2, -1, 0, 1, 2]",0,0,2,"(4, 8, 6)"
ReduceMin_54,"[-3, -2, -1, 0, 1, 2]",0,1,2,"(4, 8, 6)"
ReduceMin_55,"[-3, -2, -1, 0, 1, 2]",1,0,4,"(1, 7, 34)"
ReduceMin_56,"[-3, -2, -1, 0, 1, 2]",1,1,4,"(1, 7, 34)"
ReduceMin_57,[0],0,0,1,"(2, 1, 87)"
ReduceMin_58,[0],0,1,3,"(3, 9, 6)"
ReduceMin_59,[0],1,0,4,"(1, 7, 34)"
ReduceMin_60,[0],1,1,4,"(1, 7, 34)"
ReduceMin_61,"[-2, 2]",0,0,4,"(1, 7, 34)"
ReduceMin_62,"[-2, 2]",0,1,2,"(4, 8, 6)"
ReduceMin_63,"[-2, 2]",1,0,4,"(1, 7, 34)"
ReduceMin_64,"[-2, 2]",1,1,4,"(1, 7, 34)"
ReduceMin_65,"[-3, -2, -1, 2]",0,0,3,"(3, 9, 6)"
ReduceMin_66,"[-3, -2, -1, 2]",0,1,1,"(2, 1, 87)"
ReduceMin_67,"[-3, -2, -1, 2]",1,0,2,"(4, 8, 6)"
ReduceMin_68,"[-3, -2, -1, 2]",1,1,1,"(2, 1, 87)"
ReduceMin_69,"[-3, -2, 2]",0,0,2,"(4, 8, 6)"
ReduceMin_70,"[-3, -2, 2]",0,1,5,"(4, 4, 64)"
ReduceMin_71,"[-3, -2, 2]",1,0,1,"(2, 1, 87)"
ReduceMin_72,"[-3, -2, 2]",1,1,3,"(3, 9, 6)"
ReduceMin_73,"[-3, -2, 0]",0,0,5,"(4, 4, 64)"
ReduceMin_74,"[-3, -2, 0]",0,1,5,"(4, 4, 64)"
ReduceMin_75,"[-3, -2, 0]",1,0,3,"(3, 9, 6)"
ReduceMin_76,"[-3, -2, 0]",1,1,2,"(4, 8, 6)"
ReduceMin_77,"[-3, -2, -1, 1]",0,0,5,"(4, 4, 64)"
ReduceMin_78,"[-3, -2, -1, 1]",0,1,1,"(2, 1, 87)"
ReduceMin_79,"[-3, -2, -1, 1]",1,0,4,"(1, 7, 34)"
ReduceMin_80,"[-3, -2, -1, 1]",1,1,2,"(4, 8, 6)"
ReduceMin_81,[1],0,0,5,"(4, 4, 64)"
ReduceMin_82,[1],0,1,4,"(1, 7, 34)"
ReduceMin_83,[1],1,0,5,"(4, 4, 64)"
ReduceMin_84,[1],1,1,1,"(2, 1, 87)"
ReduceMin_85,"[-2, -1, 0]",0,0,5,"(4, 4, 64)"
ReduceMin_86,"[-2, -1, 0]",0,1,3,"(3, 9, 6)"
ReduceMin_87,"[-2, -1, 0]",1,0,2,"(4, 8, 6)"
ReduceMin_88,"[-2, -1, 0]",1,1,4,"(1, 7, 34)"
ReduceMin_89,"[-3, 1]",0,0,2,"(4, 8, 6)"
ReduceMin_90,"[-3, 1]",0,1,5,"(4, 4, 64)"
ReduceMin_91,"[-3, 1]",1,0,3,"(3, 9, 6)"
ReduceMin_92,"[-3, 1]",1,1,5,"(4, 4, 64)"
ReduceMin_93,"[-3, -1]",0,0,3,"(3, 9, 6)"
ReduceMin_94,"[-3, -1]",0,1,5,"(4, 4, 64)"
ReduceMin_95,"[-3, -1]",1,0,2,"(4, 8, 6)"
ReduceMin_96,"[-3, -1]",1,1,4,"(1, 7, 34)"
ReduceMin_97,[-2],0,0,1,"(2, 1, 87)"
ReduceMin_98,[-2],0,1,2,"(4, 8, 6)"
ReduceMin_99,[-2],1,0,4,"(1, 7, 34)"
ReduceMin_100,[-2],1,1,3,"(3, 9, 6)"
ReduceMin_101,"[-3, -2, -1]",0,0,3,"(3, 9, 6)"
ReduceMin_102,"[-3, -2, -1]",0,1,3,"(3, 9, 6)"
ReduceMin_103,"[-3, -2, -1]",1,0,5,"(4, 4, 64)"
ReduceMin_104,"[-3, -2, -1]",1,1,4,"(1, 7, 34)"
ReduceMin_105,[-1],0,0,5,"(4, 4, 64)"
ReduceMin_106,[-1],0,1,5,"(4, 4, 64)"
ReduceMin_107,[-1],1,0,3,"(3, 9, 6)"
ReduceMin_108,[-1],1,1,2,"(4, 8, 6)"
ReduceMin_109,"[-2, 0, 1, 2]",0,0,4,"(1, 7, 34)"
ReduceMin_110,"[-2, 0, 1, 2]",0,1,3,"(3, 9, 6)"
ReduceMin_111,"[-2, 0, 1, 2]",1,0,1,"(2, 1, 87)"
ReduceMin_112,"[-2, 0, 1, 2]",1,1,1,"(2, 1, 87)"
ReduceMin_113,"[-3, -2, 0, 1]",0,0,1,"(2, 1, 87)"
ReduceMin_114,"[-3, -2, 0, 1]",0,1,4,"(1, 7, 34)"
ReduceMin_115,"[-3, -2, 0, 1]",1,0,5,"(4, 4, 64)"
ReduceMin_116,"[-3, -2, 0, 1]",1,1,4,"(1, 7, 34)"
ReduceMin_117,"[-3, -1, 2]",0,0,5,"(4, 4, 64)"
ReduceMin_118,"[-3, -1, 2]",0,1,2,"(4, 8, 6)"
ReduceMin_119,"[-3, -1, 2]",1,0,1,"(2, 1, 87)"
ReduceMin_120,"[-3, -1, 2]",1,1,2,"(4, 8, 6)"
ReduceMin_121,"[-4, -3, -1, 0, 1, 2, 3]",0,0,8,"(3, 4, 80, 80)"
ReduceMin_122,"[-4, -3, -1, 0, 1, 2, 3]",0,1,10,"(1, 12, 160, 160)"
ReduceMin_123,"[-4, -3, -1, 0, 1, 2, 3]",1,0,12,"(3, 13, 223, 223)"
ReduceMin_124,"[-4, -3, -1, 0, 1, 2, 3]",1,1,9,"(2, 8, 128, 128)"
ReduceMin_125,"[-4, -3, -2, 0, 1, 2]",0,0,10,"(1, 12, 160, 160)"
ReduceMin_126,"[-4, -3, -2, 0, 1, 2]",0,1,6,"(2, 1, 32, 32)"
ReduceMin_127,"[-4, -3, -2, 0, 1, 2]",1,0,7,"(4, 2, 64, 64)"
ReduceMin_128,"[-4, -3, -2, 0, 1, 2]",1,1,13,"(2, 9, 219, 219)"
ReduceMin_129,"[-4, 2, 3]",0,0,8,"(3, 4, 80, 80)"
ReduceMin_130,"[-4, 2, 3]",0,1,13,"(2, 9, 219, 219)"
ReduceMin_131,"[-4, 2, 3]",1,0,15,"(4, 11, 209, 209)"
ReduceMin_132,"[-4, 2, 3]",1,1,13,"(2, 9, 219, 219)"
ReduceMin_133,"[-4, -3, -1, 1]",0,0,7,"(4, 2, 64, 64)"
ReduceMin_134,"[-4, -3, -1, 1]",0,1,11,"(1, 15, 256, 256)"
ReduceMin_135,"[-4, -3, -1, 1]",1,0,12,"(3, 13, 223, 223)"
ReduceMin_136,"[-4, -3, -1, 1]",1,1,9,"(2, 8, 128, 128)"
ReduceMin_137,"[0, 1, 2]",0,0,8,"(3, 4, 80, 80)"
ReduceMin_138,"[0, 1, 2]",0,1,10,"(1, 12, 160, 160)"
ReduceMin_139,"[0, 1, 2]",1,0,6,"(2, 1, 32, 32)"
ReduceMin_140,"[0, 1, 2]",1,1,11,"(1, 15, 256, 256)"
ReduceMin_141,"[-4, 0, 1, 2, 3]",0,0,9,"(2, 8, 128, 128)"
ReduceMin_142,"[-4, 0, 1, 2, 3]",0,1,13,"(2, 9, 219, 219)"
ReduceMin_143,"[-4, 0, 1, 2, 3]",1,0,12,"(3, 13, 223, 223)"
ReduceMin_144,"[-4, 0, 1, 2, 3]",1,1,11,"(1, 15, 256, 256)"
ReduceMin_145,"[-1, 0, 1, 2]",0,0,6,"(2, 1, 32, 32)"
ReduceMin_146,"[-1, 0, 1, 2]",0,1,9,"(2, 8, 128, 128)"
ReduceMin_147,"[-1, 0, 1, 2]",1,0,12,"(3, 13, 223, 223)"
ReduceMin_148,"[-1, 0, 1, 2]",1,1,15,"(4, 11, 209, 209)"
ReduceMin_149,"[-2, -1, 0, 1, 2]",0,0,12,"(3, 13, 223, 223)"
ReduceMin_150,"[-2, -1, 0, 1, 2]",0,1,11,"(1, 15, 256, 256)"
ReduceMin_151,"[-2, -1, 0, 1, 2]",1,0,8,"(3, 4, 80, 80)"
ReduceMin_152,"[-2, -1, 0, 1, 2]",1,1,14,"(4, 6, 171, 171)"
ReduceMin_153,"[-3, 0, 1, 2, 3]",0,0,7,"(4, 2, 64, 64)"
ReduceMin_154,"[-3, 0, 1, 2, 3]",0,1,7,"(4, 2, 64, 64)"
ReduceMin_155,"[-3, 0, 1, 2, 3]",1,0,6,"(2, 1, 32, 32)"
ReduceMin_156,"[-3, 0, 1, 2, 3]",1,1,9,"(2, 8, 128, 128)"
ReduceMin_157,"[-4, -2, -1, 0, 1, 2, 3]",0,0,14,"(4, 6, 171, 171)"
ReduceMin_158,"[-4, -2, -1, 0, 1, 2, 3]",0,1,9,"(2, 8, 128, 128)"
ReduceMin_159,"[-4, -2, -1, 0, 1, 2, 3]",1,0,7,"(4, 2, 64, 64)"
ReduceMin_160,"[-4, -2, -1, 0, 1, 2, 3]",1,1,15,"(4, 11, 209, 209)"
ReduceMin_161,"[-4, 3]",0,0,6,"(2, 1, 32, 32)"
ReduceMin_162,"[-4, 3]",0,1,10,"(1, 12, 160, 160)"
ReduceMin_163,"[-4, 3]",1,0,7,"(4, 2, 64, 64)"
ReduceMin_164,"[-4, 3]",1,1,13,"(2, 9, 219, 219)"
ReduceMin_165,"[-3, -1, 0, 2, 3]",0,0,13,"(2, 9, 219, 219)"
ReduceMin_166,"[-3, -1, 0, 2, 3]",0,1,11,"(1, 15, 256, 256)"
ReduceMin_167,"[-3, -1, 0, 2, 3]",1,0,14,"(4, 6, 171, 171)"
ReduceMin_168,"[-3, -1, 0, 2, 3]",1,1,12,"(3, 13, 223, 223)"
ReduceMin_169,[0],0,0,7,"(4, 2, 64, 64)"
ReduceMin_170,[0],0,1,12,"(3, 13, 223, 223)"
ReduceMin_171,[0],1,0,13,"(2, 9, 219, 219)"
ReduceMin_172,[0],1,1,10,"(1, 12, 160, 160)"
ReduceMin_173,"[-3, -2, -1, 2]",0,0,9,"(2, 8, 128, 128)"
ReduceMin_174,"[-3, -2, -1, 2]",0,1,12,"(3, 13, 223, 223)"
ReduceMin_175,"[-3, -2, -1, 2]",1,0,8,"(3, 4, 80, 80)"
ReduceMin_176,"[-3, -2, -1, 2]",1,1,15,"(4, 11, 209, 209)"
ReduceMin_177,"[-3, -2, -1, 1, 2]",0,0,11,"(1, 15, 256, 256)"
ReduceMin_178,"[-3, -2, -1, 1, 2]",0,1,10,"(1, 12, 160, 160)"
ReduceMin_179,"[-3, -2, -1, 1, 2]",1,0,7,"(4, 2, 64, 64)"
ReduceMin_180,"[-3, -2, -1, 1, 2]",1,1,7,"(4, 2, 64, 64)"
ReduceMin_181,"[0, 2, 3]",0,0,15,"(4, 11, 209, 209)"
ReduceMin_182,"[0, 2, 3]",0,1,8,"(3, 4, 80, 80)"
ReduceMin_183,"[0, 2, 3]",1,0,15,"(4, 11, 209, 209)"
ReduceMin_184,"[0, 2, 3]",1,1,10,"(1, 12, 160, 160)"
ReduceMin_185,"[-1, 2, 3]",0,0,6,"(2, 1, 32, 32)"
ReduceMin_186,"[-1, 2, 3]",0,1,11,"(1, 15, 256, 256)"
ReduceMin_187,"[-1, 2, 3]",1,0,7,"(4, 2, 64, 64)"
ReduceMin_188,"[-1, 2, 3]",1,1,8,"(3, 4, 80, 80)"
ReduceMin_189,"[-2, 2, 3]",0,0,12,"(3, 13, 223, 223)"
ReduceMin_190,"[-2, 2, 3]",0,1,12,"(3, 13, 223, 223)"
ReduceMin_191,"[-2, 2, 3]",1,0,12,"(3, 13, 223, 223)"
ReduceMin_192,"[-2, 2, 3]",1,1,13,"(2, 9, 219, 219)"
ReduceMin_193,"[-4, -3, 0, 1, 2]",0,0,10,"(1, 12, 160, 160)"
ReduceMin_194,"[-4, -3, 0, 1, 2]",0,1,12,"(3, 13, 223, 223)"
ReduceMin_195,"[-4, -3, 0, 1, 2]",1,0,11,"(1, 15, 256, 256)"
ReduceMin_196,"[-4, -3, 0, 1, 2]",1,1,12,"(3, 13, 223, 223)"
ReduceMin_197,"[-4, -3, -2, -1, 0, 2]",0,0,11,"(1, 15, 256, 256)"
ReduceMin_198,"[-4, -3, -2, -1, 0, 2]",0,1,10,"(1, 12, 160, 160)"
ReduceMin_199,"[-4, -3, -2, -1, 0, 2]",1,0,15,"(4, 11, 209, 209)"
ReduceMin_200,"[-4, -3, -2, -1, 0, 2]",1,1,9,"(2, 8, 128, 128)"
ReduceMin_201,"[-4, -3, -2, 0, 1, 3]",0,0,13,"(2, 9, 219, 219)"
ReduceMin_202,"[-4, -3, -2, 0, 1, 3]",0,1,12,"(3, 13, 223, 223)"
ReduceMin_203,"[-4, -3, -2, 0, 1, 3]",1,0,15,"(4, 11, 209, 209)"
ReduceMin_204,"[-4, -3, -2, 0, 1, 3]",1,1,7,"(4, 2, 64, 64)"
ReduceMin_205,"[-4, -2, 0, 1]",0,0,13,"(2, 9, 219, 219)"
ReduceMin_206,"[-4, -2, 0, 1]",0,1,11,"(1, 15, 256, 256)"
ReduceMin_207,"[-4, -2, 0, 1]",1,0,13,"(2, 9, 219, 219)"
ReduceMin_208,"[-4, -2, 0, 1]",1,1,13,"(2, 9, 219, 219)"
ReduceMin_209,"[-4, -3, -2, -1, 1, 2]",0,0,12,"(3, 13, 223, 223)"
ReduceMin_210,"[-4, -3, -2, -1, 1, 2]",0,1,8,"(3, 4, 80, 80)"
ReduceMin_211,"[-4, -3, -2, -1, 1, 2]",1,0,6,"(2, 1, 32, 32)"
ReduceMin_212,"[-4, -3, -2, -1, 1, 2]",1,1,7,"(4, 2, 64, 64)"
ReduceMin_213,"[-3, 1, 2, 3]",0,0,14,"(4, 6, 171, 171)"
ReduceMin_214,"[-3, 1, 2, 3]",0,1,8,"(3, 4, 80, 80)"
ReduceMin_215,"[-3, 1, 2, 3]",1,0,11,"(1, 15, 256, 256)"
ReduceMin_216,"[-3, 1, 2, 3]",1,1,6,"(2, 1, 32, 32)"
ReduceMin_217,"[-4, -1, 0, 2, 3]",0,0,8,"(3, 4, 80, 80)"
ReduceMin_218,"[-4, -1, 0, 2, 3]",0,1,14,"(4, 6, 171, 171)"
ReduceMin_219,"[-4, -1, 0, 2, 3]",1,0,9,"(2, 8, 128, 128)"
ReduceMin_220,"[-4, -1, 0, 2, 3]",1,1,10,"(1, 12, 160, 160)"
ReduceMin_221,"[-3, -1]",0,0,15,"(4, 11, 209, 209)"
ReduceMin_222,"[-3, -1]",0,1,14,"(4, 6, 171, 171)"
ReduceMin_223,"[-3, -1]",1,0,9,"(2, 8, 128, 128)"
ReduceMin_224,"[-3, -1]",1,1,13,"(2, 9, 219, 219)"
ReduceMin_225,"[-2, -1, 1]",0,0,7,"(4, 2, 64, 64)"
ReduceMin_226,"[-2, -1, 1]",0,1,8,"(3, 4, 80, 80)"
ReduceMin_227,"[-2, -1, 1]",1,0,11,"(1, 15, 256, 256)"
ReduceMin_228,"[-2, -1, 1]",1,1,15,"(4, 11, 209, 209)"
ReduceMin_229,"[1, 3]",0,0,10,"(1, 12, 160, 160)"
ReduceMin_230,"[1, 3]",0,1,11,"(1, 15, 256, 256)"
ReduceMin_231,"[1, 3]",1,0,10,"(1, 12, 160, 160)"
ReduceMin_232,"[1, 3]",1,1,6,"(2, 1, 32, 32)"
ReduceMin_233,"[-1, 1, 2]",0,0,6,"(2, 1, 32, 32)"
ReduceMin_234,"[-1, 1, 2]",0,1,10,"(1, 12, 160, 160)"
ReduceMin_235,"[-1, 1, 2]",1,0,15,"(4, 11, 209, 209)"
ReduceMin_236,"[-1, 1, 2]",1,1,10,"(1, 12, 160, 160)"
ReduceMin_237,"[-4, -3, -1, 3]",0,0,8,"(3, 4, 80, 80)"
ReduceMin_238,"[-4, -3, -1, 3]",0,1,11,"(1, 15, 256, 256)"
ReduceMin_239,"[-4, -3, -1, 3]",1,0,6,"(2, 1, 32, 32)"
ReduceMin_240,"[-4, -3, -1, 3]",1,1,12,"(3, 13, 223, 223)"
ReduceMin_241,"[-4, -2, -1, 1, 2, 3]",0,0,20,"(2, 6, 5, 23, 1)"
ReduceMin_242,"[-4, -2, -1, 1, 2, 3]",0,1,18,"(3, 8, 23, 24, 35)"
ReduceMin_243,"[-4, -2, -1, 1, 2, 3]",1,0,17,"(4, 12, 4, 30, 43)"
ReduceMin_244,"[-4, -2, -1, 1, 2, 3]",1,1,17,"(4, 12, 4, 30, 43)"
ReduceMin_245,"[-5, -4, -1, 2]",0,0,16,"(2, 9, 11, 11, 22)"
ReduceMin_246,"[-5, -4, -1, 2]",0,1,18,"(3, 8, 23, 24, 35)"
ReduceMin_247,"[-5, -4, -1, 2]",1,0,16,"(2, 9, 11, 11, 22)"
ReduceMin_248,"[-5, -4, -1, 2]",1,1,18,"(3, 8, 23, 24, 35)"
ReduceMin_249,"[-5, -4, -2, 2, 4]",0,0,18,"(3, 8, 23, 24, 35)"
ReduceMin_250,"[-5, -4, -2, 2, 4]",0,1,19,"(1, 16, 1, 11, 11)"
ReduceMin_251,"[-5, -4, -2, 2, 4]",1,0,19,"(1, 16, 1, 11, 11)"
ReduceMin_252,"[-5, -4, -2, 2, 4]",1,1,16,"(2, 9, 11, 11, 22)"
ReduceMin_253,"[-5, -3, 0]",0,0,17,"(4, 12, 4, 30, 43)"
ReduceMin_254,"[-5, -3, 0]",0,1,18,"(3, 8, 23, 24, 35)"
ReduceMin_255,"[-5, -3, 0]",1,0,18,"(3, 8, 23, 24, 35)"
ReduceMin_256,"[-5, -3, 0]",1,1,16,"(2, 9, 11, 11, 22)"
ReduceMin_257,"[-3, -2, -1, 0, 1, 2]",0,0,19,"(1, 16, 1, 11, 11)"
ReduceMin_258,"[-3, -2, -1, 0, 1, 2]",0,1,20,"(2, 6, 5, 23, 1)"
ReduceMin_259,"[-3, -2, -1, 0, 1, 2]",1,0,16,"(2, 9, 11, 11, 22)"
ReduceMin_260,"[-3, -2, -1, 0, 1, 2]",1,1,18,"(3, 8, 23, 24, 35)"
ReduceMin_261,"[-4, -3, -2, 1, 3, 4]",0,0,17,"(4, 12, 4, 30, 43)"
ReduceMin_262,"[-4, -3, -2, 1, 3, 4]",0,1,20,"(2, 6, 5, 23, 1)"
ReduceMin_263,"[-4, -3, -2, 1, 3, 4]",1,0,19,"(1, 16, 1, 11, 11)"
ReduceMin_264,"[-4, -3, -2, 1, 3, 4]",1,1,17,"(4, 12, 4, 30, 43)"
ReduceMin_265,"[-4, -1, 1, 4]",0,0,19,"(1, 16, 1, 11, 11)"
ReduceMin_266,"[-4, -1, 1, 4]",0,1,18,"(3, 8, 23, 24, 35)"
ReduceMin_267,"[-4, -1, 1, 4]",1,0,17,"(4, 12, 4, 30, 43)"
ReduceMin_268,"[-4, -1, 1, 4]",1,1,17,"(4, 12, 4, 30, 43)"
ReduceMin_269,"[-3, -1, 0, 1, 4]",0,0,17,"(4, 12, 4, 30, 43)"
ReduceMin_270,"[-3, -1, 0, 1, 4]",0,1,20,"(2, 6, 5, 23, 1)"
ReduceMin_271,"[-3, -1, 0, 1, 4]",1,0,17,"(4, 12, 4, 30, 43)"
ReduceMin_272,"[-3, -1, 0, 1, 4]",1,1,19,"(1, 16, 1, 11, 11)"
ReduceMin_273,"[-5, 2]",0,0,16,"(2, 9, 11, 11, 22)"
ReduceMin_274,"[-5, 2]",0,1,16,"(2, 9, 11, 11, 22)"
ReduceMin_275,"[-5, 2]",1,0,17,"(4, 12, 4, 30, 43)"
ReduceMin_276,"[-5, 2]",1,1,16,"(2, 9, 11, 11, 22)"
ReduceMin_277,"[-5, 0, 1, 2, 4]",0,0,20,"(2, 6, 5, 23, 1)"
ReduceMin_278,"[-5, 0, 1, 2, 4]",0,1,20,"(2, 6, 5, 23, 1)"
ReduceMin_279,"[-5, 0, 1, 2, 4]",1,0,16,"(2, 9, 11, 11, 22)"
ReduceMin_280,"[-5, 0, 1, 2, 4]",1,1,19,"(1, 16, 1, 11, 11)"
ReduceMin_281,"[-5, -3, 1]",0,0,16,"(2, 9, 11, 11, 22)"
ReduceMin_282,"[-5, -3, 1]",0,1,18,"(3, 8, 23, 24, 35)"
ReduceMin_283,"[-5, -3, 1]",1,0,16,"(2, 9, 11, 11, 22)"
ReduceMin_284,"[-5, -3, 1]",1,1,17,"(4, 12, 4, 30, 43)"
ReduceMin_285,"[-5, -3, -2, -1, 1]",0,0,18,"(3, 8, 23, 24, 35)"
ReduceMin_286,"[-5, -3, -2, -1, 1]",0,1,19,"(1, 16, 1, 11, 11)"
ReduceMin_287,"[-5, -3, -2, -1, 1]",1,0,19,"(1, 16, 1, 11, 11)"
ReduceMin_288,"[-5, -3, -2, -1, 1]",1,1,18,"(3, 8, 23, 24, 35)"
ReduceMin_289,"[-3, -2, 2, 4]",0,0,18,"(3, 8, 23, 24, 35)"
ReduceMin_290,"[-3, -2, 2, 4]",0,1,18,"(3, 8, 23, 24, 35)"
ReduceMin_291,"[-3, -2, 2, 4]",1,0,19,"(1, 16, 1, 11, 11)"
ReduceMin_292,"[-3, -2, 2, 4]",1,1,18,"(3, 8, 23, 24, 35)"
ReduceMin_293,"[-3, 0, 1, 2, 3]",0,0,20,"(2, 6, 5, 23, 1)"
ReduceMin_294,"[-3, 0, 1, 2, 3]",0,1,17,"(4, 12, 4, 30, 43)"
ReduceMin_295,"[-3, 0, 1, 2, 3]",1,0,19,"(1, 16, 1, 11, 11)"
ReduceMin_296,"[-3, 0, 1, 2, 3]",1,1,19,"(1, 16, 1, 11, 11)"
ReduceMin_297,"[-4, -1, 0, 1]",0,0,17,"(4, 12, 4, 30, 43)"
ReduceMin_298,"[-4, -1, 0, 1]",0,1,19,"(1, 16, 1, 11, 11)"
ReduceMin_299,"[-4, -1, 0, 1]",1,0,19,"(1, 16, 1, 11, 11)"
ReduceMin_300,"[-4, -1, 0, 1]",1,1,19,"(1, 16, 1, 11, 11)"
ReduceMin_301,"[-1, 1, 2, 4]",0,0,18,"(3, 8, 23, 24, 35)"
ReduceMin_302,"[-1, 1, 2, 4]",0,1,19,"(1, 16, 1, 11, 11)"
ReduceMin_303,"[-1, 1, 2, 4]",1,0,17,"(4, 12, 4, 30, 43)"
ReduceMin_304,"[-1, 1, 2, 4]",1,1,16,"(2, 9, 11, 11, 22)"
ReduceMin_305,"[-5, -4, -3, 0, 4]",0,0,16,"(2, 9, 11, 11, 22)"
ReduceMin_306,"[-5, -4, -3, 0, 4]",0,1,19,"(1, 16, 1, 11, 11)"
ReduceMin_307,"[-5, -4, -3, 0, 4]",1,0,20,"(2, 6, 5, 23, 1)"
ReduceMin_308,"[-5, -4, -3, 0, 4]",1,1,16,"(2, 9, 11, 11, 22)"
ReduceMin_309,"[-1, 0, 1, 4]",0,0,18,"(3, 8, 23, 24, 35)"
ReduceMin_310,"[-1, 0, 1, 4]",0,1,19,"(1, 16, 1, 11, 11)"
ReduceMin_311,"[-1, 0, 1, 4]",1,0,16,"(2, 9, 11, 11, 22)"
ReduceMin_312,"[-1, 0, 1, 4]",1,1,20,"(2, 6, 5, 23, 1)"
ReduceMin_313,"[-3, 0, 1, 3]",0,0,18,"(3, 8, 23, 24, 35)"
ReduceMin_314,"[-3, 0, 1, 3]",0,1,16,"(2, 9, 11, 11, 22)"
ReduceMin_315,"[-3, 0, 1, 3]",1,0,18,"(3, 8, 23, 24, 35)"
ReduceMin_316,"[-3, 0, 1, 3]",1,1,17,"(4, 12, 4, 30, 43)"
ReduceMin_317,"[-5, -3, -2, -1, 0]",0,0,16,"(2, 9, 11, 11, 22)"
ReduceMin_318,"[-5, -3, -2, -1, 0]",0,1,20,"(2, 6, 5, 23, 1)"
ReduceMin_319,"[-5, -3, -2, -1, 0]",1,0,19,"(1, 16, 1, 11, 11)"
ReduceMin_320,"[-5, -3, -2, -1, 0]",1,1,17,"(4, 12, 4, 30, 43)"
ReduceMin_321,"[-4, -2, -1, 2, 3, 4]",0,0,16,"(2, 9, 11, 11, 22)"
ReduceMin_322,"[-4, -2, -1, 2, 3, 4]",0,1,20,"(2, 6, 5, 23, 1)"
ReduceMin_323,"[-4, -2, -1, 2, 3, 4]",1,0,16,"(2, 9, 11, 11, 22)"
ReduceMin_324,"[-4, -2, -1, 2, 3, 4]",1,1,20,"(2, 6, 5, 23, 1)"
ReduceMin_325,"[-5, -4, -3, 0, 1, 2, 4]",0,0,20,"(2, 6, 5, 23, 1)"
ReduceMin_326,"[-5, -4, -3, 0, 1, 2, 4]",0,1,17,"(4, 12, 4, 30, 43)"
ReduceMin_327,"[-5, -4, -3, 0, 1, 2, 4]",1,0,17,"(4, 12, 4, 30, 43)"
ReduceMin_328,"[-5, -4, -3, 0, 1, 2, 4]",1,1,19,"(1, 16, 1, 11, 11)"
ReduceMin_329,"[-4, 0]",0,0,18,"(3, 8, 23, 24, 35)"
ReduceMin_330,"[-4, 0]",0,1,20,"(2, 6, 5, 23, 1)"
ReduceMin_331,"[-4, 0]",1,0,18,"(3, 8, 23, 24, 35)"
ReduceMin_332,"[-4, 0]",1,1,18,"(3, 8, 23, 24, 35)"
ReduceMin_333,"[-4, -3, 4]",0,0,18,"(3, 8, 23, 24, 35)"
ReduceMin_334,"[-4, -3, 4]",0,1,20,"(2, 6, 5, 23, 1)"
ReduceMin_335,"[-4, -3, 4]",1,0,19,"(1, 16, 1, 11, 11)"
ReduceMin_336,"[-4, -3, 4]",1,1,17,"(4, 12, 4, 30, 43)"
ReduceMin_337,"[-4, -3, -2, 0, 2]",0,0,20,"(2, 6, 5, 23, 1)"
ReduceMin_338,"[-4, -3, -2, 0, 2]",0,1,17,"(4, 12, 4, 30, 43)"
ReduceMin_339,"[-4, -3, -2, 0, 2]",1,0,18,"(3, 8, 23, 24, 35)"
ReduceMin_340,"[-4, -3, -2, 0, 2]",1,1,19,"(1, 16, 1, 11, 11)"
ReduceMin_341,"[-4, -2, -1, 2, 3]",0,0,16,"(2, 9, 11, 11, 22)"
ReduceMin_342,"[-4, -2, -1, 2, 3]",0,1,20,"(2, 6, 5, 23, 1)"
ReduceMin_343,"[-4, -2, -1, 2, 3]",1,0,16,"(2, 9, 11, 11, 22)"
ReduceMin_344,"[-4, -2, -1, 2, 3]",1,1,19,"(1, 16, 1, 11, 11)"
ReduceMin_345,"[-3, 0]",0,0,19,"(1, 16, 1, 11, 11)"
ReduceMin_346,"[-3, 0]",0,1,19,"(1, 16, 1, 11, 11)"
ReduceMin_347,"[-3, 0]",1,0,20,"(2, 6, 5, 23, 1)"
ReduceMin_348,"[-3, 0]",1,1,17,"(4, 12, 4, 30, 43)"
ReduceMin_349,"[-5, -4, -1, 0, 4]",0,0,19,"(1, 16, 1, 11, 11)"
ReduceMin_350,"[-5, -4, -1, 0, 4]",0,1,17,"(4, 12, 4, 30, 43)"
ReduceMin_351,"[-5, -4, -1, 0, 4]",1,0,20,"(2, 6, 5, 23, 1)"
ReduceMin_352,"[-5, -4, -1, 0, 4]",1,1,18,"(3, 8, 23, 24, 35)"
ReduceMin_353,"[-4, -2, -1, 0, 1, 2, 4]",0,0,18,"(3, 8, 23, 24, 35)"
ReduceMin_354,"[-4, -2, -1, 0, 1, 2, 4]",0,1,18,"(3, 8, 23, 24, 35)"
ReduceMin_355,"[-4, -2, -1, 0, 1, 2, 4]",1,0,20,"(2, 6, 5, 23, 1)"
ReduceMin_356,"[-4, -2, -1, 0, 1, 2, 4]",1,1,20,"(2, 6, 5, 23, 1)"
ReduceMin_357,"[-1, 2, 3]",0,0,19,"(1, 16, 1, 11, 11)"
ReduceMin_358,"[-1, 2, 3]",0,1,16,"(2, 9, 11, 11, 22)"
ReduceMin_359,"[-1, 2, 3]",1,0,18,"(3, 8, 23, 24, 35)"
ReduceMin_360,"[-1, 2, 3]",1,1,20,"(2, 6, 5, 23, 1)"
ReduceMin_361,"[-6, -5, -4, -3, -2, 0, 2, 4]",0,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_362,"[-6, -5, -4, -3, -2, 0, 2, 4]",0,1,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_363,"[-6, -5, -4, -3, -2, 0, 2, 4]",1,0,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_364,"[-6, -5, -4, -3, -2, 0, 2, 4]",1,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_365,"[-6, -5, -4, -1, 2, 5]",0,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_366,"[-6, -5, -4, -1, 2, 5]",0,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_367,"[-6, -5, -4, -1, 2, 5]",1,0,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_368,"[-6, -5, -4, -1, 2, 5]",1,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_369,"[-6, -5, -4, -3, -2, -1, 0, 3, 4, 5]",0,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_370,"[-6, -5, -4, -3, -2, -1, 0, 3, 4, 5]",0,1,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_371,"[-6, -5, -4, -3, -2, -1, 0, 3, 4, 5]",1,0,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_372,"[-6, -5, -4, -3, -2, -1, 0, 3, 4, 5]",1,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_373,"[-6, -4, -2, -1, 5]",0,0,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_374,"[-6, -4, -2, -1, 5]",0,1,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_375,"[-6, -4, -2, -1, 5]",1,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_376,"[-6, -4, -2, -1, 5]",1,1,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_377,"[-6, -3, -2, 0, 1, 2, 3, 4]",0,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_378,"[-6, -3, -2, 0, 1, 2, 3, 4]",0,1,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_379,"[-6, -3, -2, 0, 1, 2, 3, 4]",1,0,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_380,"[-6, -3, -2, 0, 1, 2, 3, 4]",1,1,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_381,"[-4, -3, -2, -1, 1]",0,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_382,"[-4, -3, -2, -1, 1]",0,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_383,"[-4, -3, -2, -1, 1]",1,0,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_384,"[-4, -3, -2, -1, 1]",1,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_385,"[-6, -5, -4, -2, -1, 0, 2, 3, 5]",0,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_386,"[-6, -5, -4, -2, -1, 0, 2, 3, 5]",0,1,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_387,"[-6, -5, -4, -2, -1, 0, 2, 3, 5]",1,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_388,"[-6, -5, -4, -2, -1, 0, 2, 3, 5]",1,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_389,"[-6, -4, 0, 1, 2]",0,0,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_390,"[-6, -4, 0, 1, 2]",0,1,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_391,"[-6, -4, 0, 1, 2]",1,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_392,"[-6, -4, 0, 1, 2]",1,1,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_393,"[-3, 1, 2]",0,0,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_394,"[-3, 1, 2]",0,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_395,"[-3, 1, 2]",1,0,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_396,"[-3, 1, 2]",1,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_397,"[-6, -4, -2, -1, 0, 1, 5]",0,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_398,"[-6, -4, -2, -1, 0, 1, 5]",0,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_399,"[-6, -4, -2, -1, 0, 1, 5]",1,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_400,"[-6, -4, -2, -1, 0, 1, 5]",1,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_401,"[-6, -4, -2, 0, 1, 4, 5]",0,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_402,"[-6, -4, -2, 0, 1, 4, 5]",0,1,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_403,"[-6, -4, -2, 0, 1, 4, 5]",1,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_404,"[-6, -4, -2, 0, 1, 4, 5]",1,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_405,"[-6, -4, 0, 1, 2, 4, 5]",0,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_406,"[-6, -4, 0, 1, 2, 4, 5]",0,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_407,"[-6, -4, 0, 1, 2, 4, 5]",1,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_408,"[-6, -4, 0, 1, 2, 4, 5]",1,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_409,"[-6, -3, -2, -1, 1, 3]",0,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_410,"[-6, -3, -2, -1, 1, 3]",0,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_411,"[-6, -3, -2, -1, 1, 3]",1,0,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_412,"[-6, -3, -2, -1, 1, 3]",1,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_413,"[-6, -2, 0, 1, 3, 5]",0,0,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_414,"[-6, -2, 0, 1, 3, 5]",0,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_415,"[-6, -2, 0, 1, 3, 5]",1,0,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_416,"[-6, -2, 0, 1, 3, 5]",1,1,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_417,"[-5, -3, -1, 1, 4, 5]",0,0,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_418,"[-5, -3, -1, 1, 4, 5]",0,1,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_419,"[-5, -3, -1, 1, 4, 5]",1,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_420,"[-5, -3, -1, 1, 4, 5]",1,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_421,"[-6, -4, -3, -1, 0, 2, 5]",0,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_422,"[-6, -4, -3, -1, 0, 2, 5]",0,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_423,"[-6, -4, -3, -1, 0, 2, 5]",1,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_424,"[-6, -4, -3, -1, 0, 2, 5]",1,1,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_425,"[-6, -2, 1, 3, 4, 5]",0,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_426,"[-6, -2, 1, 3, 4, 5]",0,1,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_427,"[-6, -2, 1, 3, 4, 5]",1,0,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_428,"[-6, -2, 1, 3, 4, 5]",1,1,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_429,"[-6, -5, -3, -2, -1, 4, 5]",0,0,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_430,"[-6, -5, -3, -2, -1, 4, 5]",0,1,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_431,"[-6, -5, -3, -2, -1, 4, 5]",1,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_432,"[-6, -5, -3, -2, -1, 4, 5]",1,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_433,"[-5, -2, 0, 1, 5]",0,0,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_434,"[-5, -2, 0, 1, 5]",0,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_435,"[-5, -2, 0, 1, 5]",1,0,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_436,"[-5, -2, 0, 1, 5]",1,1,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_437,"[-5, -3, -2, -1, 0, 3, 4]",0,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_438,"[-5, -3, -2, -1, 0, 3, 4]",0,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_439,"[-5, -3, -2, -1, 0, 3, 4]",1,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_440,"[-5, -3, -2, -1, 0, 3, 4]",1,1,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_441,"[-6, -5, -3, -1, 0, 2, 3, 4, 5]",0,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_442,"[-6, -5, -3, -1, 0, 2, 3, 4, 5]",0,1,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_443,"[-6, -5, -3, -1, 0, 2, 3, 4, 5]",1,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_444,"[-6, -5, -3, -1, 0, 2, 3, 4, 5]",1,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_445,"[-6, 0, 2, 3]",0,0,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_446,"[-6, 0, 2, 3]",0,1,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_447,"[-6, 0, 2, 3]",1,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_448,"[-6, 0, 2, 3]",1,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_449,"[-5, -2, -1, 2, 5]",0,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_450,"[-5, -2, -1, 2, 5]",0,1,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_451,"[-5, -2, -1, 2, 5]",1,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_452,"[-5, -2, -1, 2, 5]",1,1,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_453,"[-6, -2, 3, 4, 5]",0,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_454,"[-6, -2, 3, 4, 5]",0,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_455,"[-6, -2, 3, 4, 5]",1,0,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_456,"[-6, -2, 3, 4, 5]",1,1,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_457,"[-6, -4, -3, 0, 2, 3, 5]",0,0,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_458,"[-6, -4, -3, 0, 2, 3, 5]",0,1,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_459,"[-6, -4, -3, 0, 2, 3, 5]",1,0,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_460,"[-6, -4, -3, 0, 2, 3, 5]",1,1,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_461,"[-1, 0, 1, 2, 3, 4, 5]",0,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_462,"[-1, 0, 1, 2, 3, 4, 5]",0,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_463,"[-1, 0, 1, 2, 3, 4, 5]",1,0,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_464,"[-1, 0, 1, 2, 3, 4, 5]",1,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_465,"[-6, -5, -2, 0, 1, 2, 4, 5]",0,0,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_466,"[-6, -5, -2, 0, 1, 2, 4, 5]",0,1,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_467,"[-6, -5, -2, 0, 1, 2, 4, 5]",1,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_468,"[-6, -5, -2, 0, 1, 2, 4, 5]",1,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_469,"[-3, -2, -1, 3, 4, 5]",0,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_470,"[-3, -2, -1, 3, 4, 5]",0,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_471,"[-3, -2, -1, 3, 4, 5]",1,0,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_472,"[-3, -2, -1, 3, 4, 5]",1,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_473,"[-6, -1, 2]",0,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_474,"[-6, -1, 2]",0,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_475,"[-6, -1, 2]",1,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_476,"[-6, -1, 2]",1,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_477,"[-5, -4, -3, -2, -1, 1, 3, 5]",0,0,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_478,"[-5, -4, -3, -2, -1, 1, 3, 5]",0,1,22,"(2, 8, 12, 9, 10, 13)"
ReduceMin_479,"[-5, -4, -3, -2, -1, 1, 3, 5]",1,0,21,"(4, 1, 6, 11, 14, 4)"
ReduceMin_480,"[-5, -4, -3, -2, -1, 1, 3, 5]",1,1,21,"(4, 1, 6, 11, 14, 4)"
